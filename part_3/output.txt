==297141== Helgrind, a thread error detector
==297141== Copyright (C) 2007-2024, and GNU GPL'd, by OpenWorks LLP et al.
==297141== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==297141== Command: ./my_program
==297141== 
==297141== ---Thread-Announcement------------------------------------------
==297141== 
==297141== Thread #4 was created
==297141==    at 0x49A7293: clone (clone.S:76)
==297141==    by 0x49A73F0: __clone_internal_fallback (clone-internal.c:64)
==297141==    by 0x49A73F0: __clone_internal (clone-internal.c:109)
==297141==    by 0x4921DFF: create_thread (pthread_create.c:297)
==297141==    by 0x4922AA1: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==297141==    by 0x4853F45: pthread_create_WRK (hg_intercepts.c:445)
==297141==    by 0x10925B: main (my_program.c:22)
==297141== 
==297141== ---Thread-Announcement------------------------------------------
==297141== 
==297141== Thread #3 was created
==297141==    at 0x49A7293: clone (clone.S:76)
==297141==    by 0x49A73F0: __clone_internal_fallback (clone-internal.c:64)
==297141==    by 0x49A73F0: __clone_internal (clone-internal.c:109)
==297141==    by 0x4921DFF: create_thread (pthread_create.c:297)
==297141==    by 0x4922AA1: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==297141==    by 0x4853F45: pthread_create_WRK (hg_intercepts.c:445)
==297141==    by 0x10925B: main (my_program.c:22)
==297141== 
==297141== ----------------------------------------------------------------
==297141== 
==297141== Possible data race during read of size 8 at 0x10C048 by thread #4
==297141== Locks held: none
==297141==    at 0x1091A7: square (my_program.c:10)
==297141==    by 0x485414B: mythread_wrapper (hg_intercepts.c:406)
==297141==    by 0x492239C: start_thread (pthread_create.c:447)
==297141==    by 0x49A72A3: clone (clone.S:100)
==297141== 
==297141== This conflicts with a previous write of size 8 by thread #3
==297141== Locks held: none
==297141==    at 0x1091B1: square (my_program.c:10)
==297141==    by 0x485414B: mythread_wrapper (hg_intercepts.c:406)
==297141==    by 0x492239C: start_thread (pthread_create.c:447)
==297141==    by 0x49A72A3: clone (clone.S:100)
==297141==  Address 0x10c048 is 0 bytes inside data symbol "accum"
==297141== 
==297141== ----------------------------------------------------------------
==297141== 
==297141== Possible data race during write of size 8 at 0x10C048 by thread #4
==297141== Locks held: none
==297141==    at 0x1091B1: square (my_program.c:10)
==297141==    by 0x485414B: mythread_wrapper (hg_intercepts.c:406)
==297141==    by 0x492239C: start_thread (pthread_create.c:447)
==297141==    by 0x49A72A3: clone (clone.S:100)
==297141== 
==297141== This conflicts with a previous write of size 8 by thread #3
==297141== Locks held: none
==297141==    at 0x1091B1: square (my_program.c:10)
==297141==    by 0x485414B: mythread_wrapper (hg_intercepts.c:406)
==297141==    by 0x492239C: start_thread (pthread_create.c:447)
==297141==    by 0x49A72A3: clone (clone.S:100)
==297141==  Address 0x10c048 is 0 bytes inside data symbol "accum"
==297141== 
==297141== 
==297141== Use --history-level=approx or =none to gain increased speed, at
==297141== the cost of reduced accuracy of conflicting-access information
==297141== For lists of detected and suppressed errors, rerun with: -s
==297141== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 342 from 18)
